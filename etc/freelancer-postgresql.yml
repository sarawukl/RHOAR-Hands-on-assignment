apiVersion: v1
kind: Template
labels:
  app: freelancer-service
metadata:
  name: freelancer-postgresql
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: freelancer-service
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 5432
      targetPort: 5432
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: freelancer-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      recreateParams:
        post:
          execNewPod:
            command:
              - /bin/sh
              - -i
              - -c
              - sleep 10 && PGPASSWORD=$POSTGRESQL_PASSWORD psql -h $FREELANCER_POSTGRESQL_SERVICE_HOST -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c "$POSTGRESQL_INIT"
            containerName: ${APPLICATION_NAME}
            env:
            - name: POSTGRESQL_INIT
              value: CREATE TABLE freelancer (id bigint NOT NULL,
                email character varying(255),first_name character varying(255),
                last_name character varying(255),skills character varying(255));
                ALTER TABLE freelancer OWNER TO freelancer_service;ALTER TABLE ONLY freelancer 
                ADD CONSTRAINT freelancer_pkey PRIMARY KEY (id);
                insert into freelancer (id, first_name, last_name, email, skills) values (1, 'Jdavie', 'Balshaw', 'jbalshaw0@aol.com', 'knowledge user');
                insert into freelancer (id, first_name, last_name, email, skills) values (2, 'Trina', 'Hamstead', 'thamstead1@mediafire.com', 'policy');
                insert into freelancer (id, first_name, last_name, email, skills) values (3, 'Vonni', 'Everton', 'veverton2@behance.net', 'Multi-channelled');
                insert into freelancer (id, first_name, last_name, email, skills) values (4, 'Bettine', 'Maris', 'bmaris3@ebay.co.uk', 'scalable');
                insert into freelancer (id, first_name, last_name, email, skills) values (5, 'Sutton', 'Danskine', 'sdanskine4@bravesites.com', 'Extended');
                insert into freelancer (id, first_name, last_name, email, skills) values (6, 'Dud', 'Hug', 'dhug5@opera.com', 'artificial intelligence');
                insert into freelancer (id, first_name, last_name, email, skills) values (7, 'Agneta', 'Skrine', 'askrine6@hud.gov', 'local area network');
                insert into freelancer (id, first_name, last_name, email, skills) values (8, 'Hirsch', 'Rouchy', 'hrouchy7@wordpress.org', 'contextually-based');
                insert into freelancer (id, first_name, last_name, email, skills) values (9, 'Eduino', 'Claffey', 'eclaffey8@blog.com', 'Assimilated');
                insert into freelancer (id, first_name, last_name, email, skills) values (10, 'Monro', 'Opdenort', 'mopdenort9@aboutads.info', 'open system');
                insert into freelancer (id, first_name, last_name, email, skills) values (11, 'Gabriellia', 'Tickner', 'gticknera@skype.com', 'multi-state');
                insert into freelancer (id, first_name, last_name, email, skills) values (12, 'Janeczka', 'Finlayson', 'jfinlaysonb@smugmug.com', 'Cross-platform');
                insert into freelancer (id, first_name, last_name, email, skills) values (13, 'Karry', 'Hebron', 'khebronc@freewebs.com', 'software');
                insert into freelancer (id, first_name, last_name, email, skills) values (14, 'Rhiamon', 'Cerro', 'rcerrod@state.tx.us', 'standardization');
                insert into freelancer (id, first_name, last_name, email, skills) values (15, 'Emmalynn', 'Stebbings', 'estebbingse@goodreads.com', 'multi-tasking');
                insert into freelancer (id, first_name, last_name, email, skills) values (16, 'Way', 'Mander', 'wmanderf@scientificamerican.com', 'project');
                insert into freelancer (id, first_name, last_name, email, skills) values (17, 'Christina', 'Newnham', 'cnewnhamg@fotki.com', 'analyzing');
                insert into freelancer (id, first_name, last_name, email, skills) values (18, 'Zackariah', 'Ashforth', 'zashforthh@gnu.org', 'Persistent');
                insert into freelancer (id, first_name, last_name, email, skills) values (19, 'Amelie', 'Salway', 'asalwayi@hud.gov', 'Mandatory');
                insert into freelancer (id, first_name, last_name, email, skills) values (20, 'Lilah', 'Tanguy', 'ltanguyj@scientificamerican.com', 'user-facing');    
          failurePolicy: ignore
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: freelancer-service
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${FREELANCER_DB_USERNAME}
          - name: POSTGRESQL_PASSWORD
            value: ${FREELANCER_DB_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: ${FREELANCER_DB_NAME}
          image: postgresql
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 5432
            protocol: TCP
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: freelancer-postgresql-data
          livenessProbe:
            initialDelaySeconds: 30
            failureThreshold: 10
            periodSeconds: 10
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 256Mi
        terminationGracePeriodSeconds: 60
        volumes:
        - name: freelancer-postgresql-data
          persistentVolumeClaim:
            claimName: freelancer-postgresql-pv
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: postgresql:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: freelancer-service
    name: freelancer-postgresql-pv
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
parameters:
- description: Application name
  name: APPLICATION_NAME
  required: true
  value: freelancer-postgresql
- description: Freelancer Service database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: FREELANCER_DB_USERNAME
  required: true
- description: Freelancer Service database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: FREELANCER_DB_PASSWORD
  required: true
- description: Freelancer Service database name
  name: FREELANCER_DB_NAME
  required: true
  value: freelancerdb